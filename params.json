{
  "name": "Searching for Configurations in Clone Evalution: A Replication Study",
  "tagline": "A website for the paper of SSBSE Challenge Track 2016",
  "body": "### Welcome to the webpage of our SSBSE 2016 Challenge Track paper\r\n## Searching for Configurations in Clone Evalution: A Replication Study\r\nClone detection is the process of finding duplicated code within a software code base in an automated manner. It is useful in several areas of software development such as code quality analysis, bug detection and correction, and program understanding. Clone detection can be achieved by finding agreement between multiple detection tools in favour of high recall. We replicate a study of a framework based on genetic algorithm that searches for the optimised parameters which maximises clone agreement among four tools (EvoClone -- Wang, T., Harman, M., Jia, Y., & Krinke, J. (2013). Searching for Better Configurations: A Rigorous Approach to Clone Evaluation. FSE'13). We apply the framework to 14 major releases of Mockito, a unit testing framework. We observed the same positive outcome that the framework's optimised parameters outperforming the tools' default parameters in term of clone agreement by 19.91\\% to 66.43\\% for all releases. However, we found that the framework gives undesirable results in term of clone quality in 5 Mockito releases. Since the framework favours recall, it periodically produces a high number of clones for maximising the agreement while at the same time introducing more false positives. \r\n\r\n### Downloads the clone detectors' optimised parameters for 14 Mockito releases.\r\n* Please click [here](mockito-optimised-parameters-14release.csv) to download.\r\n* Mappings of parameter's full names can be found [here](params_mappings.csv).\r\n\r\n### Authors and Contributors\r\nPlease contact @cragkhit for any inquiries.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}